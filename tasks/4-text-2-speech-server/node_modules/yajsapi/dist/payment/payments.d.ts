import { BasePaymentOptions } from "./config.js";
import { Invoice } from "./invoice.js";
import { DebitNote } from "./debit_note.js";
export interface PaymentOptions extends BasePaymentOptions {
    invoiceFetchingInterval?: number;
    debitNotesFetchingInterval?: number;
    payingInterval?: number;
    maxInvoiceEvents?: number;
    maxDebitNotesEvents?: number;
}
export declare const PaymentEventType = "PaymentReceived";
export declare class Payments extends EventTarget {
    private isRunning;
    private options;
    private logger?;
    private lastInvoiceFetchingTime;
    private lastDebitNotesFetchingTime;
    static create(options?: PaymentOptions): Promise<Payments>;
    constructor(options?: PaymentOptions);
    unsubscribe(): Promise<void>;
    private subscribe;
    private subscribeForInvoices;
    private subscribeForDebitNotes;
}
export declare class InvoiceEvent extends Event {
    readonly invoice: Invoice;
    constructor(type: any, data: any);
}
export declare class DebitNoteEvent extends Event {
    readonly debitNote: DebitNote;
    constructor(type: any, data: any);
}
