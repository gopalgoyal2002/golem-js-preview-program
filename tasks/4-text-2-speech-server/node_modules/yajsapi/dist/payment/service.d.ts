import { Allocation } from "./allocation.js";
import { BasePaymentOptions } from "./config.js";
export interface PaymentOptions extends BasePaymentOptions {
    invoiceFetchingInterval?: number;
    debitNotesFetchingInterval?: number;
    payingInterval?: number;
    maxInvoiceEvents?: number;
    maxDebitNotesEvents?: number;
}
interface AgreementPayable {
    id: string;
    provider: {
        id: string;
        name: string;
    };
}
export declare class PaymentService {
    private isRunning;
    private options;
    private logger?;
    private allocations;
    private agreementsToPay;
    private agreementsDebitNotes;
    private invoicesToPay;
    private debitNotesToPay;
    private paidAgreements;
    private payments?;
    constructor(options?: PaymentOptions);
    run(): Promise<void>;
    end(): Promise<void>;
    createAllocations(): Promise<Allocation[]>;
    acceptPayments(agreement: AgreementPayable): void;
    acceptDebitNotes(agreementId: string): void;
    private processInvoices;
    private processDebitNotes;
    private subscribePayments;
    private getAllocationForPayment;
}
export {};
