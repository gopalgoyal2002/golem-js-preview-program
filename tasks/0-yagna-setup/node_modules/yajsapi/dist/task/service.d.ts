import { Task, TaskQueue } from "./index.js";
import { Logger } from "../utils/index.js";
import { StorageProvider } from "../storage/index.js";
import { AgreementPoolService } from "../agreement/index.js";
import { PaymentService } from "../payment/index.js";
import { NetworkService } from "../network/index.js";
import { ActivityOptions } from "../activity/index.js";
export interface TaskOptions extends ActivityOptions {
    maxParallelTasks?: number;
    taskRunningInterval?: number;
    activityStateCheckingInterval?: number;
    taskTimeout?: number;
    logger?: Logger;
    storageProvider?: StorageProvider;
}
export declare class TaskService {
    private tasksQueue;
    private agreementPoolService;
    private paymentService;
    private networkService?;
    private activeTasksCount;
    private activities;
    private initWorkersDone;
    private isRunning;
    private logger?;
    private options;
    constructor(tasksQueue: TaskQueue<Task<unknown, unknown>>, agreementPoolService: AgreementPoolService, paymentService: PaymentService, networkService?: NetworkService | undefined, options?: TaskOptions);
    run(): Promise<void>;
    end(): Promise<void>;
    private startTask;
}
