import { QueueableTask, Worker } from "./index.js";
export declare enum TaskState {
    New = 0,
    Retry = 1,
    Pending = 2,
    Done = 3,
    Rejected = 4
}
export declare class Task<InputType = unknown, OutputType = unknown> implements QueueableTask {
    readonly id: string;
    private worker;
    private data?;
    private initWorker?;
    private state;
    private results?;
    private error?;
    private retriesCount;
    constructor(id: string, worker: Worker<InputType, OutputType>, data?: InputType | undefined, initWorker?: Worker<undefined, unknown> | undefined);
    start(): void;
    stop(results?: OutputType, error?: Error, retry?: boolean): void;
    isQueueable(): boolean;
    isRetry(): boolean;
    isFinished(): boolean;
    isRejected(): boolean;
    isPending(): boolean;
    isNew(): boolean;
    getResults(): OutputType | undefined;
    getData(): InputType | undefined;
    getWorker(): Worker<InputType>;
    getInitWorker(): Worker<undefined> | undefined;
    getRetriesCount(): number;
    getError(): Error | undefined;
}
