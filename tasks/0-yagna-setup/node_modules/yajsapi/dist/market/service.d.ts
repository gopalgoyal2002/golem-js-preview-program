import { Package } from "../package/index.js";
import { DemandOptions } from "./index.js";
import { MarketStrategy } from "./strategy.js";
import { AgreementPoolService } from "../agreement/index.js";
import { Allocation } from "../payment/index.js";
export interface MarketOptions extends DemandOptions {
    strategy?: MarketStrategy;
    debitNotesAcceptanceTimeout?: number;
}
export declare class MarketService {
    private readonly agreementPoolService;
    private readonly options;
    private marketStrategy;
    private demand?;
    private allowedPaymentPlatforms;
    private logger;
    constructor(agreementPoolService: AgreementPoolService, options?: MarketOptions);
    run(taskPackage: Package, allocations: Allocation[]): Promise<void>;
    end(): Promise<void>;
    private processInitialProposal;
    private isProposalValid;
    private processDraftProposal;
    private getCommonPaymentPlatforms;
}
