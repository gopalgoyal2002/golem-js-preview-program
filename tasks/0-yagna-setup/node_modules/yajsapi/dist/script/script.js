export class Script {
    commands;
    static create(commands) {
        return new Script(commands);
    }
    constructor(commands = []) {
        this.commands = commands;
    }
    add(command) {
        this.commands.push(command);
    }
    async before() {
        for (const cmd of this.commands)
            await cmd.before();
    }
    async after() {
        for (const cmd of this.commands)
            await cmd.after();
    }
    getExeScriptRequest() {
        if (!this.commands.length)
            throw new Error("There are no commands in the script");
        return { text: JSON.stringify(this.commands.map((cmd) => cmd.toJson())) };
    }
}
//# sourceMappingURL=script.js.map