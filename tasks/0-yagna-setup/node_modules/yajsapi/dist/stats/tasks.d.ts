import { AbstractAggregator, ItemInfo } from './abstract_aggregator.js';
export declare enum TaskStatusEnum {
    Pending = "pending",
    Finished = "finished",
    Rejected = "rejected"
}
export interface TaskInfo extends ItemInfo {
    agreementId: string;
    startTime: number;
    stopTime: number;
    retriesCount: number;
    reason?: string;
    status: TaskStatusEnum;
}
interface Payload {
    id: string;
    agreementId: string;
    startTime: number;
}
export declare class Tasks extends AbstractAggregator<Payload, TaskInfo> {
    beforeAdd(payload: any): TaskInfo;
    retry(id: string, retriesCount: number): void;
    reject(id: string, timeStamp: number, reason?: string): void;
    finish(id: string, timeStamp: number): void;
    getByAgreementId(agreementId: string): Collection<R>;
}
export {};
