import { AbstractAggregator } from './abstract_aggregator.js';
export var AgreementStatusEnum;
(function (AgreementStatusEnum) {
    AgreementStatusEnum["Pending"] = "pending";
    AgreementStatusEnum["Confirmed"] = "confirmed";
    AgreementStatusEnum["Rejected"] = "rejected";
})(AgreementStatusEnum || (AgreementStatusEnum = {}));
export class Agreements extends AbstractAggregator {
    beforeAdd(payload) {
        return { ...payload, status: AgreementStatusEnum.Pending };
    }
    confirm(id) {
        this.updateItemInfo(id, { status: AgreementStatusEnum.Confirmed });
    }
    reject(id) {
        this.updateItemInfo(id, { status: AgreementStatusEnum.Rejected });
    }
    getByProviderId(providerId) {
        return this.getByField("providerId", providerId);
    }
    getByProposalId(proposalId) {
        return this.getByField("proposalId", proposalId).first();
    }
    getByStatus(status) {
        return this.getByField("status", status);
    }
}
//# sourceMappingURL=agreements.js.map