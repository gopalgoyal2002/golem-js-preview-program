import { AbstractAggregator } from './abstract_aggregator.js';
export var TaskStatusEnum;
(function (TaskStatusEnum) {
    TaskStatusEnum["Pending"] = "pending";
    TaskStatusEnum["Finished"] = "finished";
    TaskStatusEnum["Rejected"] = "rejected";
})(TaskStatusEnum || (TaskStatusEnum = {}));
export class Tasks extends AbstractAggregator {
    beforeAdd(payload) {
        return {
            ...payload,
            stopTime: 0,
            retriesCount: 0,
            status: TaskStatusEnum.Pending,
        };
    }
    retry(id, retriesCount) {
        this.updateItemInfo(id, { retriesCount });
    }
    reject(id, timeStamp, reason) {
        this.updateItemInfo(id, { stopTime: timeStamp, reason: reason, status: TaskStatusEnum.Rejected });
    }
    finish(id, timeStamp) {
        this.updateItemInfo(id, { stopTime: timeStamp, status: TaskStatusEnum.Finished });
    }
    getByAgreementId(agreementId) {
        return this.getByField("agreementId", agreementId);
    }
}
//# sourceMappingURL=tasks.js.map